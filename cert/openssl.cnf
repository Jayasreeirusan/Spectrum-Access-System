# SAS OpenSSL configuration file.

# This definition stops the following lines choking if HOME isn't
# defined.
HOME			= .
RANDFILE		= $ENV::HOME/.rnd

# Extra OBJECT IDENTIFIER info:
oid_section		= new_oids

[ new_oids ]
sas_role_oid = 1.3.6.1.4.1.46609.1.1
sas_fccid_oid = 1.3.6.1.4.1.46609.1.2
sas_serialnum_oid = 1.3.6.1.4.1.46609.1.3
sas_maxgrants_oid = 1.3.6.1.4.1.46609.1.4
sas_phase_oid = 1.3.6.1.4.1.46609.1.5
sas_zone_oid = 1.3.6.1.4.1.46609.1.6
sas_freq_oid = 1.3.6.1.4.1.46609.1.7
sas_test_oid = 1.3.6.1.4.1.46609.1.999

####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir		= ./sasCA		# Where everything is kept
certs		= $dir/certs		# Where the issued certs are kept
crl_dir		= $dir/crl		# Where the issued crl are kept
database	= $dir/index.txt	# database index file.
#unique_subject	= no			# Set to 'no' to allow creation of
					# several ctificates with same subject.
new_certs_dir	= $dir/newcerts		# default place for new certs.

certificate	= $dir/cacert.pem 	# The CA certificate
serial		= $dir/serial 		# The current serial number
crlnumber	= $dir/crlnumber	# the current crl number
					# must be commented out to leave a V1 CRL
crl		= $dir/crl.pem 		# The current CRL
private_key	= $dir/private/cakey.pem# The private key
RANDFILE	= $dir/private/.rand	# private random number file

x509_extensions	= usr_cert		# The extentions to add to the cert

name_opt 	= ca_default		# Subject Name options
cert_opt 	= ca_default		# Certificate field options

# Extension copying option: use with caution.
# Note: we want to copy request extensions into the signed cert.
copy_extensions = copy

default_days	= 365			# how long to certify for
default_crl_days= 30			# how long before next CRL
default_md	= default		# use public key default MD
preserve	= no			# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy		= policy_match

# For the CA policy
[ policy_match ]
countryName		= match
stateOrProvinceName	= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

####################################################################
[ req ]
default_bits		= 2048
default_keyfile 	= privkey.pem
distinguished_name	= req_distinguished_name
attributes		= req_attributes
x509_extensions	= v3_ca	# The extentions to add to the self signed cert

# Passwords for private keys if not present they will be prompted for
# input_password = secret
# output_password = secret

# This sets a mask for permitted string types. There are several options. 
# utf8only: only UTF8Strings (PKIX recommendation after 2004).
string_mask = utf8only

req_extensions = sas_req # The extensions to add to a certificate request

[ req_distinguished_name ]
countryName			= Country Name (2 letter code)
countryName_default		= US
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)

localityName			= Locality Name (eg, city)

organizationName		= Organization Name (eg, company)

organizationalUnitName		= Organizational Unit Name (eg, section)

commonName			= Common Name (domain name for SAS/domain proxy or applicant name)
commonName_max			= 64

emailAddress			= Email Address
emailAddress_max		= 64

[ req_attributes ]

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

# Note: a TEST:TRUE CA should include TEST:TRUE extensions on all certs.
sas_test_oid = ASN1:UTF8String:TEST:TRUE

[ sas_req ]

basicConstraints = CA:FALSE
# Note: should be 'digitalSignature' for EC, 'keyEncipherment' for RSA
keyUsage = keyEncipherment
subjectKeyIdentifier = hash

sas_role_oid = ASN1:UTF8String:ROLE:SAS
sas_phase_oid = ASN1:UTF8String:PHASE:1

[ pal_req ]

basicConstraints = CA:FALSE
# Note: should be 'digitalSignature' for EC, 'keyEncipherment' for RSA
keyUsage = keyEncipherment
subjectKeyIdentifier = hash

sas_role_oid = ASN1:UTF8String:ROLE:PAL
sas_zone_oid = ASN1:UTF8String:ZONE:zone/census/2010/51760030500
sas_freq_oid = ASN1:UTF8String:FREQUENCY:3660-3670

[ device_req ]

basicConstraints = critical,CA:TRUE,pathlen:1
keyUsage = keyEncipherment
subjectKeyIdentifier = hash

sas_role_oid = ASN1:UTF8String:ROLE:DEVICE
sas_fccid_oid = ASN1:UTF8String:FCCID:JXBLMDSXP4-8T
sas_maxgrants_oid = ASN1:UTF8String:MAXGRANTS:1

[ unit_req ]
# Used to specify a particular unit of a device type (CBSD)
basicConstraints = CA:FALSE
keyUsage = keyEncipherment
subjectKeyIdentifier = hash

sas_role_oid = ASN1:UTF8String:ROLE:DEVICE
sas_fccid_oid = ASN1:UTF8String:FCCID:JXBLMDSXP4-8T
sas_maxgrants_oid = ASN1:UTF8String:MAXGRANTS:1
sas_serialnum_oid = ASN1:UTF8String:SERIALNUM:6369A-RRU32563500

[ oper_req ]

basicConstraints = CA:FALSE
# Note: should be 'digitalSignature' for EC, 'keyEncipherment' for RSA
keyUsage = keyEncipherment
subjectKeyIdentifier = hash

sas_role_oid = ASN1:UTF8String:ROLE:OPERATOR

[ installer_req ]

basicConstraints = CA:FALSE
# Note: should be 'digitalSignature' for EC, 'keyEncipherment' for RSA
keyUsage = keyEncipherment
subjectKeyIdentifier = hash

sas_role_oid = ASN1:UTF8String:ROLE:INSTALLER

[ v3_ca ]
# This section is used when self-signing a (test) CA cert
# PKIX recommendation.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always

subjectAltName=email:move

basicConstraints = critical,CA:true

# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
# keyUsage = cRLSign, keyCertSign

sas_role_oid = ASN1:UTF8String:ROLE:CA
sas_test_oid = ASN1:UTF8String:TEST:TRUE

[ v3_req_sas_ca ]
# This section used to initiate a SAS Test CA.
# PKIX recommendation.
subjectKeyIdentifier=hash
#authorityKeyIdentifier=keyid:always,issuer:always

subjectAltName=email:move

basicConstraints = critical,CA:true

# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
# keyUsage = cRLSign, keyCertSign

sas_role_oid = ASN1:UTF8String:ROLE:CA
sas_test_oid = ASN1:UTF8String:TEST:TRUE
